<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IqglAAAAAElFTkSuQmCC
</value>
  </data>
</root>